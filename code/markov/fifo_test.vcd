$date
	Tue May  4 19:26:43 2021
$end

$version
	Synopsys VCS version P-2019.06
$end

$timescale
	1ps
$end

$comment Csum: 1 17a8035aee561473 $end


$scope module mc_tester $end

$scope module dut $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 6 # valid [5:0] $end
$var wire 6 $ bits [5:0] $end
$var wire 1 % out_valid $end
$var wire 16 & out_16 [15:0] $end
$var wire 6 ' writing [5:0] $end
$var reg 21 ( register [20:0] $end
$var reg 5 ) counter [4:0] $end
$var wire 5 * counter_wire [4:0] $end
$var wire 5 + counter_up [4:0] $end
$var reg 1 , out_valid_reg $end
$var reg 3 - num_valid [2:0] $end
$var reg 3 . num_valid_n [2:0] $end
$var reg 6 / valid_bits [5:0] $end
$var reg 6 0 write_bits [5:0] $end
$var integer 32 1 idx $end
$var integer 32 2 i $end
$var integer 32 3 j $end
$var reg 1 4 out_16_reg $end
$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
x,
bxxxxx )
bxxxxx *
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 2
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 1
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 3
bxxx -
bxxx .
bxxxxxxxxxxxxxxxxxxxxx (
bxxxxx +
bxxxxxx /
bxxxxxx 0
x4
0!
0"
bxxxxxx #
bxxxxxx $
x%
bxxxxxxxxxxxxxxxx &
bxxxxxx '
$end
#10000
1!
1"
b00000 +
0%
b0000000000000000 &
b00000 *
b000000000000000000000 (
b00000 )
0,
#20000
0!
#30000
1!
0"
b00101 +
b000000 $
b000000 #
b00000000000000000000000000000000 3
b000 -
b000000 /
b110 .
b000000 0
b000000 '
b00000000000000000000000000000110 1
#40000
0!
#50000
1!
b111111 $
b011111 #
b101 -
b011111 /
b001 .
b011111 0
b011111 '
#60000
0!
#70000
1!
b010001 $
b100111 #
b00000000000000000000000000000101 3
b100 -
b000001 /
b010 .
b000001 0
b000001 '
b000000000000000011111 (
b0000000000011111 &
b00101 )
b01010 +
b00101 *
#80000
0!
#90000
1!
b010101 $
b110111 #
b00000000000000000000000000000100 3
b101 -
b001101 /
b001 .
b001101 0
b001101 '
b000000000000000111111 (
b0000000000111111 &
b01001 )
b01110 +
b01001 *
#100000
0!
#110000
1!
b110101 $
b00000000000000000000000000000101 3
b011101 /
b011101 0
b011101 '
b000000001101000111111 (
b0001101000111111 &
b01110 )
b10011 +
b01110 *
#120000
0!
#130000
1!
b100110 #
b011 -
b000110 /
b011 .
b000110 0
b000110 '
b001110101101000111111 (
b0101101000111111 &
b10011 )
b11000 +
b10011 *
1,
1%
#140000
0!
#150000
1!
b00000000000000000000000000010100 2
b00000000000000000000000000010101 3
b00111 )
b01100 +
b00111 *
b001110101101000100111 (
b0101101000100111 &
b000000000000001100111 (
b0000000001100111 &
0,
0%
#160000
0!
#170000
1!
b00000000000000000000000000000011 3
b000000000001101100111 (
b0000001101100111 &
b01010 )
b01111 +
b01010 *
#180000
0!
#190000
1!
b000000001101101100111 (
b0001101101100111 &
b01101 )
b10010 +
b01101 *
